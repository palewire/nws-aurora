name: Testing and deployment

on:
  push:
  workflow_dispatch:

jobs:
  lint-python:
    name: Lint Python code
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4

      - id: check-ruff
        name: Check with Ruff
        uses: chartboost/ruff-action@v1
        with:
          args: 'check --exit-zero --verbose'

      - id: format-ruff
        name: Format with Ruff
        uses: chartboost/ruff-action@v1
        with:
          args: 'format --check --verbose'

  mypy-python:
    name: Check Python static types
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v4

      - id: setup-python
        name: Setup Python
        uses: hynek/setup-cached-uv@v2

      - id: install-python-dependencies
        name: Install Python dependencies
        run: uv venv && uv pip install mypy types-requests types-pytz

      - id: mypy
        name: Run mypy
        run: uv run mypy ./ --ignore-missing-imports

  test-python:
    strategy:
      matrix:
        python: ['3.9', '3.10', '3.11']
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
          cache: 'pipenv'

      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python

      - id: pipenv-install
        name: Install Python dependencies
        run: pipenv install --skip-lock --python `which python`
        shell: bash

      - id: run
        name: Run
        run: pipenv run python test.py
        shell: bash

  build:
    name: Build release candidate
    runs-on: ubuntu-latest
    needs: [test-python]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: setup-python
        name: Setup Python
        uses: hynek/setup-cached-uv@v2

      - id: install-python-dependencies
        name: Install Python dependencies
        run: uv venv && uv pip install twine

      - id: build-source
        name: Build source release
        run: uv build --sdist --wheel
        shell: bash

      - id: check
        name: Check release
        run: uv run twine check dist/*
        shell: bash

      - id: save
        name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-candidate
          path: ./dist
          if-no-files-found: error

  tag-release:
    name: Tagged PyPI release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - id: fetch
        name: Fetch artifact
        uses: actions/download-artifact@v4
        with:
          name: release-candidate
          path: ./dist

      - id: publish
        name: Publish release
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
          verify_metadata: false
